import numpy as np

triangular_symmetries_dict = {(4, 20002): "D6",
                              (4, 10104): "D2",
                              (5, 10105): "D2",
                              (6, 10106): "D2",
                              (6, 10206): "C2",
                              (7, 10207): "C6",
                              (7, 10107): "D2",
                              (8, 10308): "D2",
                              (8, 10208): "D2",
                              (8, 20004): "D2",
                              (8, 10108): "D2",
                              (9, 30003): "D6",
                              (9, 10209): "C2",
                              (9, 10109): "D2",
                              (10, 10110): "D2",
                              (10, 10210): "C2",
                              (10, 10410): "C2",
                              (11, 10111): "D2",
                              (11, 10211): "C2",
                              (12, 20206): "D6",
                              (12, 10412): "D2",
                              (12, 20006): "D2",
                              (12, 10512): "D2",
                              (12, 10112): "D2",
                              (12, 10312): "C2",
                              (12, 10212): "C2",
                              (13, 10313): "C6",
                              (13, 10113): "D2",
                              (14, 10114): "D2",
                              (14, 10314): "C2",
                              (15, 10315): "D2",
                              (15, 10415): "D2",
                              (15, 10515): "D2",
                              (15, 10215): "C2",
                              (16, 40004): "D6",
                              (16, 20208): "D2",
                              (16, 10616): "D2",
                              (16, 10716): "D2",
                              (16, 20008): "D2",
                              (16, 10316): "C2",
                              (16, 10216): "C2",
                              (17, 10117): "D2",
                              (17, 10317): "C2",
                              (17, 10217): "C2",
                              (18, 30006): "D2",
                              (18, 10418): "C2",
                              (18, 10318): "C2",
                              (18, 10518): "C2",
                              (18, 10218): "C2",
                              (19, 10719): "C6",
                              (20, 10420): "C2",
                              (20, 10320): "C2",
                              (20, 10820): "D2",
                              (20, 10520): "C2",
                              (21, 10421): "C6",
                              (21, 10721): "D2",
                              (21, 10621): "C2",
                              (22, 10422): "C2",
                              (23, 10423): "C2",
                              (24, 10424): "D2",
                              (24, 20212): "D2",
                              (25, 50005): "D6",
                              (27, 30309): "D6",
                              (28, 20414): "C6",
                              (30, 11130): "D2",
                              (30, 10430): "C2",
                              (31, 10531): "C6",
                              (32, 20416): "D2",
                              (32, 40008): "D2",
                              (33, 11033): "D2",
                              (36, 60006): "D6",
                              (39, 11639): "C6",
                              (42, 10742): "C2",
                              (45, 11945): "D2",
                              (48, 40412): "D6",
                              }
n_latt_4GSS = [(9,30003), (18, 30006), (27,30309), (36, 60006)]
n_latt_min = [[8, 20002],
              [8, 10104],
              [10, 10105],
              ]
n_latt_small = [[8, 20002],
                [8, 10104],
                [10, 10105],
                [12, 10106],
                [12, 10206],
                [14, 10207],
                [14, 10107],
                [16, 10308],
                [16, 10208],
                [16, 20004],
                [16, 10108],
                [18, 30003],
                [18, 10209],
                [18, 10109]]
n_latt_triangular_small = [[int(nh/2), idh] for (nh, idh) in n_latt_small]
n_latt_medium = [[8, 20002],
                          [8, 10104],
                          [10, 10105],
                          [12, 10106],
                          [12, 10206],
                          [14, 10207],
                          [14, 10107],
                          [16, 10308],
                          [16, 10208],
                          [16, 20004],
                          [16, 10108],
                          [18, 30003],
                          [18, 10209],
                          [18, 10109],
                          [20, 10110],
                          [20, 10210],
                          [20, 10410],
                          [22, 10111],
                          [22, 10211],
                          [24, 20206],
                          [24, 10412],
                          [24, 20006],
                          [24, 10512],
                          [24, 10112],
                          [24, 10312],
                          [24, 10212],
                          [26, 10313],
                          [26, 10113],
                          [28, 10114],
                          [28, 10314],
                          ]
n_latt_triangular_medium = [[int(nh/2), idh] for (nh, idh) in n_latt_medium]
n_latt_large = [[8, 20002],
                             [8, 10104],
                             [10, 10105],
                             [12, 10106],
                             [12, 10206],
                             [14, 10207],
                             [14, 10107],
                             [16, 10308],
                             [16, 10208],
                             [16, 20004],
                             [16, 10108],
                             [18, 30003],
                             [18, 10209],
                             [18, 10109],
                             [20, 10110],
                             [20, 10210],
                             [20, 10410],
                             [22, 10111],
                             [22, 10211],
                             [24, 20206],
                             [24, 10412],
                             [24, 20006],
                             [24, 10512],
                             [24, 10112],
                             [24, 10312],
                             [24, 10212],
                             [26, 10313],
                             [26, 10113],
                             [28, 10114],
                             [28, 10314],
                             [30, 10315],
                             [30, 10415],
                             [32, 40004],
                             [32, 20208],
                             [32, 10616],
                             [32, 10716],
                             [32, 20008],
                             [32, 10316],
                             [32, 10216],
                             [34, 10117],
                             [34, 10317],
                             [34, 10217],
                             [36, 30006],
                             [36, 10418],
                             [36, 10318],
                             [36, 10518],
                             [36, 10218],
                             ]
n_latt_very_large = [[8, 20002],
                             [8, 10104],
                             [10, 10105],
                             [12, 10106],
                             [12, 10206],
                             [14, 10207],
                             [14, 10107],
                             [16, 10308],
                             [16, 10208],
                             [16, 20004],
                             [16, 10108],
                             [18, 30003],
                             [18, 10209],
                             [18, 10109],
                             [20, 10110],
                             [20, 10210],
                             [20, 10410],
                             [22, 10111],
                             [22, 10211],
                             [24, 20206],
                             [24, 10412],
                             [24, 20006],
                             [24, 10512],
                             [24, 10112],
                             [24, 10312],
                             [24, 10212],
                             [26, 10313],
                             [26, 10113],
                             [28, 10114],
                             [28, 10314],
                             [30, 10315],
                             [30, 10415],
                              [30, 10515],
                              [30, 10215],
                             [32, 40004],
                             [32, 20208],
                             [32, 10616],
                             [32, 10716],
                             [32, 20008],
                             [32, 10316],
                             [32, 10216],
                             [34, 10117],
                             [34, 10317],
                             [34, 10217],
                             [36, 30006],
                             [36, 10418],
                             [36, 10318],
                             [36, 10518],
                             [36, 10218],
                             [38, 10719],
                              [40, 10420],
                              [40, 10320],
                              [40, 10820],
                              [40, 10520],
                              [42, 10421],
                              [42, 10721],
                              [42, 10621],
                              [44, 10422],
                              [46, 10423],
                              [48, 10424],
                              [48, 20212],
                              [50, 50005],
                              [54, 30309],
                              [56, 20414],
                              [60, 11130],
                              [60, 10430],
                              [62, 10531],
                              [64, 20416],
                              [64, 40008],
                              [66, 11033],
                              [72, 60006],
                              [78, 11639],
                              [84, 10742],
                              [90, 11945],
                              [96, 40412],
                     [98, 70007],
                     [392, 1400014]
                              ]
n_latt_kpoint = [[9, 30003],
                          [12, 10412],
                          [12, 20206],
                          [12, 10112],
                          [15, 10415],
                          [18, 30006],
                          [18, 10418],
                          [21, 10421],
                          [21, 10721],
                          [24, 10424],
                          [24, 20212]]
n_latt_kpoint_large = n_latt_kpoint + [[27, 30309], [30, 10430], [33, 11033], [36, 60006]]
n_latt_kpoint_very_large = n_latt_kpoint_large + [
    [39, 11639],
    [42, 10742],
    [45, 11945],
    [48, 40412]
]
n_latt_triangular_large = [[int(nh/2), idh] for (nh, idh) in n_latt_large]
n_latt_triangular_very_large= [[int(nh/2), idh] for (nh, idh) in n_latt_very_large]
ns_latt_large = [[16, 40004],
                 [16, 20208],
                 [16, 10616],
                 [16,10316],
                 [17,10317],
                 [18,10318],
                 [18, 10418],
                 [19, 10719],
                 [20, 10820],
                 [20, 10520],
                 [20, 10320],
                 [20, 10420]]

non_kpoint_disjoints = {(16, 40004): np.array([0, 11, 9, 2]),
           (15, 10315): np.array([0, 5, 7, 13]),
               (12, 20006): np.array([1, 4, 9]),
                        (25,50005):np.array([9, 7, 17, 10, 23, 20, 1]),
           }

n_high_sym = [(12, 20206),
              (16, 40004),
              (28, 20414)]